{"version":3,"sources":["decoders.ts","encoders.ts","Footer/Footer.tsx","App.tsx","Footer/img/CodechainLogo_White.svg","Footer/img/github.svg","Footer/img/gitter.svg","Footer/img/medium.svg","Footer/img/telegram.svg","Footer/img/twitter.svg","serviceWorker.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","numberDecoder","hexDecoder","stringDecoder","timestampDecoder","bn_js__WEBPACK_IMPORTED_MODULE_0__","bn_js__WEBPACK_IMPORTED_MODULE_0___default","n","buffer","length","BN","toString","e","bytes","noControlChars","arguments","undefined","getTrailingByte","index","Error","result","i","byte1","cp","String","fromCodePoint","_","timestamp","reduce","accum","byte","Date","toISOString","Buffer","numberEncoder","hexEncoder","stringEncoder","timestampEncoder","string","isNaN","hexString","from","slice","parse","Footer","react__WEBPACK_IMPORTED_MODULE_5__","className","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","src","logo","alt","rel","target","href","github","gitter","twitter","medium","telegram","React","App","_this","Object","_Users_sclee_workspace_rlp_debugger_upstream_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_sclee_workspace_rlp_debugger_upstream_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_sclee_workspace_rlp_debugger_upstream_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleEncodedTextChange","plainText","decodeButton","value","text","replace","disabled","label","startsWith","RLP","setState","mode","encodedText","handlePlainTextChange","edit","rebuild","encodeButton","plain","state","__","_props","change","handleClickDecode","handleClickEncode","body","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","placeholder","onChange","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","variant","size","block","onClick","_Footer_Footer__WEBPACK_IMPORTED_MODULE_11__","Item","key","idx","handler","fromList","Component","props","_this2","type","decoded","valueHandler","itemValue","disabledSet","add","splice","Array","isArray","delete","handleTextChange","hex","number","console","log","handleSelectTypeChange","valid","handleAdd","handleRemove","handleChange","handleListAdd","handleListAddInsert","handleListRemove","isBuffer","isNull","Set","options","map","_this3","style","height","marginLeft","child","decodedValue","renderSelector","module","exports","p","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0bf2dd74.chunk.js","sourcesContent":["import BN from \"bn.js\";\n\nexport function numberDecoder(buffer: Buffer): string | null {\n  if (buffer.length > 8) {\n    return null;\n  }\n  try {\n    const bn = new BN(buffer);\n    return bn.toString(10);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function hexDecoder(buffer: Buffer): string | null {\n  return buffer.toString(\"hex\");\n}\n\nexport function stringDecoder(bytes: Buffer, noControlChars = true): string | null {\n  function getTrailingByte(index: number) {\n    if ((bytes[index] & 0xc0) !== 0x80) throw new Error(\"Invalid utf8 sequence\");\n    return bytes[index] & 0x3f;\n  }\n\n  try {\n    let result = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n      const byte1 = bytes[i];\n      let cp;\n      if (byte1 < 0x80) {\n        cp = byte1;\n      } else if ((byte1 & 0xe0) === 0xc0) {\n        const byte2 = getTrailingByte(++i);\n        cp = ((byte1 & 0x1f) << 6) | byte2;\n      } else if ((byte1 & 0xf0) === 0xe0) {\n        const byte2 = getTrailingByte(++i);\n        const byte3 = getTrailingByte(++i);\n        cp = ((byte1 & 0x0f) << 12) | (byte2 << 6) | byte3;\n      } else if ((byte1 & 0xf8) === 0xf0) {\n        const byte2 = getTrailingByte(++i);\n        const byte3 = getTrailingByte(++i);\n        const byte4 = getTrailingByte(++i);\n        cp = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      } else {\n        throw new Error(\"Invalid utf8 sequence\");\n      }\n\n      if (noControlChars === true) {\n        // https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n        const c0 = cp >= 0x0000 && cp <= 0x001f;\n        const whitespace = cp === 0x09 || cp === 0x0a || cp === 0x0d;\n        const c1 = cp >= 0x0080 && cp <= 0x009f;\n        if ((c0 && !whitespace) || c1) {\n          return null; // control characters\n        }\n      }\n      result += String.fromCodePoint(cp);\n    }\n\n    return result;\n  } catch (_) {\n    return null;\n  }\n}\n\nexport function timestampDecoder(buffer: Buffer): string | null {\n  if (buffer.length > 4) {\n    return null;\n  }\n\n  try {\n    const timestamp = buffer.reduce((accum, byte) => (accum << 8) + byte);\n    return new Date(timestamp * 1000).toISOString();\n  } catch (_) {\n    return null;\n  }\n}\n","import BN from \"bn.js\";\r\n\r\nexport function numberEncoder(string: string): Buffer | null {\r\n  if (isNaN(+string)) {\r\n    return null;\r\n  }\r\n  try {\r\n    const bn = new BN(+string);\r\n    const hexString = bn.toString(\"hex\");\r\n    return Buffer.from(hexString.length % 2 === 1 ? \"0\" + hexString : hexString, \"hex\");\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function hexEncoder(string: string): Buffer | null {\r\n  try {\r\n    return Buffer.from(\r\n      string.slice(2).length % 2 === 1 ? \"0\" + string.slice(2) : string.slice(2),\r\n      \"hex\",\r\n    );\r\n  } catch (_) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function stringEncoder(string: string): Buffer | null {\r\n  try {\r\n    return Buffer.from(string, \"utf-8\");\r\n  } catch (_) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function timestampEncoder(string: string): Buffer | null {\r\n  try {\r\n    let timestamp = Date.parse(string) / 1000;\r\n    return Buffer.from(timestamp.toString(16));\r\n  } catch (_) {\r\n    return null;\r\n  }\r\n}\r\n","import * as React from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport \"./Footer.scss\";\nimport logo from \"./img/CodechainLogo_White.svg\";\nimport github from \"./img/github.svg\";\nimport gitter from \"./img/gitter.svg\";\nimport medium from \"./img/medium.svg\";\nimport telegram from \"./img/telegram.svg\";\nimport twitter from \"./img/twitter.svg\";\n\nexport default class Footer extends React.Component<any, any> {\n  public render() {\n    return (\n      <div className=\"Footer\">\n        <Container>\n          <Row>\n            <Col md={7}>\n              <div>\n                <img src={logo} alt=\"\" />\n              </div>\n              <div className=\"mt-4\">\n                <div>\n                  <span className=\"font-weight-bold mr-3\">Contact</span>\n                  <span>Email us: support@kodebox.io</span>\n                </div>\n              </div>\n              <div className=\"mt-2\">\n                <span>CodeChain and CodeChain logo are trademarks of Kodebox, Inc</span>\n              </div>\n            </Col>\n            <Col md={5}>\n              <div className=\"link-icon-container\">\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/CodeChain-io\">\n                  <img alt=\"\" src={github} className=\"mr-3 mr-md-0 ml-0 ml-md-3 link-icon\" />\n                </a>\n                <a\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://gitter.im/CodeChain-io/codechain\"\n                >\n                  <img alt=\"\" src={gitter} className=\"mr-3 mr-md-0 ml-0 ml-md-3 link-icon\" />\n                </a>\n                <a\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://twitter.com/codechain_io\"\n                >\n                  <img alt=\"\" src={twitter} className=\"mr-3 mr-md-0 ml-0 ml-md-3 link-icon\" />\n                </a>\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://medium.com/codechain\">\n                  <img alt=\"\" src={medium} className=\"mr-3 mr-md-0 ml-0 ml-md-3 link-icon\" />\n                </a>\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://t.me/codechain_protocol\">\n                  <img alt=\"\" src={telegram} className=\"mr-3 mr-md-0 ml-0 ml-md-3 link-icon\" />\n                </a>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"link-container\">\n            <div className=\"link-item-col\">\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://codechain.io/#feature\">\n                <span className=\"link-header\">Why CodeChain</span>\n              </a>\n            </div>\n            <div className=\"link-item-col\">\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://codechain.io/#platform\">\n                <span className=\"link-header\">Platform</span>\n              </a>\n            </div>\n            <div className=\"link-item-col\">\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://codechain.io/#contact\">\n                <span className=\"link-header\">Contact</span>\n              </a>\n            </div>\n            <div className=\"link-item-col\">\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://codechain.io/#about\">\n                <span className=\"link-header\">About Us</span>\n              </a>\n            </div>\n            <div className=\"link-item-col\">\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://codechain.io/#faq\">\n                <span className=\"link-header\">How it Works</span>\n              </a>\n            </div>\n            <div className=\"link-item-col\">\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://medium.com/codechain\">\n                <span className=\"link-header\">Blog</span>\n              </a>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as RLP from \"rlp\";\nimport { hexDecoder, numberDecoder, stringDecoder, timestampDecoder } from \"./decoders\";\nimport { hexEncoder, numberEncoder, stringEncoder, timestampEncoder } from \"./encoders\";\nimport { isNull } from \"util\";\nimport { Button } from \"react-bootstrap\";\nimport Footer from \"./Footer/Footer\";\n\ntype AppState = {\n  mode: \"encoded\" | \"decoded\";\n  encodedText: string;\n  // Single source of truth for rlp decoded text.\n  // If there are any changes in child components, they are lifted up to this source of truth\n  plainText: any;\n  decodeButton: {\n    disabled: boolean;\n    label: string;\n  };\n  encodeButton: {\n    disabled: boolean;\n    label: string;\n  };\n  // For re-rendering item list\n  change: boolean;\n};\n\nclass App extends React.Component<{}, AppState> {\n  public constructor() {\n    super({});\n\n    this.state = {\n      mode: \"encoded\",\n      encodedText: \"\",\n      plainText: null,\n      decodeButton: {\n        disabled: true,\n        label: \"RLP is empty\",\n      },\n      encodeButton: {\n        disabled: false,\n        label: \"Encode\",\n      },\n      change: false,\n    };\n  }\n\n  private handleEncodedTextChange = (e: any) => {\n    const { value }: { value: string } = e.target;\n    let text = value.replace(/\\s/g, \"\");\n    let plainText;\n    let decodeButton;\n\n    try {\n      if (text.length === 0) {\n        plainText = null;\n        decodeButton = {\n          disabled: true,\n          label: \"RLP is empty\",\n        };\n      } else {\n        if (text.startsWith(\"0x\") === false) {\n          text = \"0x\" + text;\n        }\n        plainText = RLP.decode(text);\n        decodeButton = {\n          disabled: false,\n          label: \"Decode\",\n        };\n      }\n    } catch (_) {\n      plainText = null;\n      decodeButton = {\n        disabled: true,\n        label: \"RLP decode error\",\n      };\n    }\n\n    this.setState({\n      mode: \"encoded\",\n      encodedText: value,\n      plainText,\n      decodeButton,\n    });\n  };\n\n  private handlePlainTextChange = (\n    _: number,\n    value: any,\n    disabled: boolean,\n    edit: Edit,\n    rebuild: boolean,\n  ) => {\n    let encodeButton: any;\n    let encodedText: any;\n    let plain = value;\n\n    // Change the source of truth only when a change is valid\n    if (!disabled) {\n      if (edit === \"change\") {\n        plain = [this.state.plainText];\n      }\n\n      try {\n        encodedText = RLP.encode(plain).toString(\"hex\");\n\n        this.setState({\n          encodedText,\n          plainText: plain,\n        });\n      } catch (__) {\n        encodeButton = {\n          disabled: true,\n          label: \"RLP encode error\",\n        };\n      }\n\n      encodeButton = {\n        disabled: false,\n        label: \"Encode\",\n      };\n    } else {\n      encodeButton = {\n        disabled: true,\n        label: \"RLP encode error\",\n      };\n    }\n\n    this.setState({\n      encodeButton,\n    });\n\n    // Re-render the source of truth if one of add, remove, list change occurs\n    if (rebuild) {\n      this.setState((state, _props) => ({\n        change: !state.change,\n      }));\n    }\n  };\n\n  private handleClickDecode = () => {\n    this.setState({ mode: \"decoded\" });\n  };\n\n  private handleClickEncode = () => {\n    this.setState({ mode: \"encoded\" });\n  };\n\n  public render() {\n    let body;\n    if (this.state.mode === \"encoded\") {\n      body = (\n        <div className=\"App-body\">\n          <div className=\"body\">\n            <textarea\n              id=\"encoded-text\"\n              className=\"code form-control\"\n              placeholder=\"RLP encoded hex string here\"\n              value={this.state.encodedText}\n              onChange={this.handleEncodedTextChange}\n            />\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              block\n              disabled={this.state.decodeButton.disabled}\n              onClick={this.handleClickDecode}\n            >\n              {this.state.decodeButton.label}\n            </Button>\n          </div>\n          <Footer />\n        </div>\n      );\n    } else if (this.state.mode === \"decoded\") {\n      body = (\n        <div className=\"App-body\">\n          <div className=\"body\">\n            <Item\n              key={this.state.change ? \"true\" : \"false\"}\n              idx={0}\n              value={this.state.plainText}\n              handler={this.handlePlainTextChange}\n              fromList={false}\n            />\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              block\n              disabled={this.state.encodeButton.disabled}\n              onClick={this.handleClickEncode}\n            >\n              {this.state.encodeButton.label}\n            </Button>\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>RLP Debugger</h1>\n        </header>\n        {body}\n      </div>\n    );\n  }\n}\n\n// String(number | hex | string | timestamp), List\ntype Type = \"number\" | \"hex\" | \"string\" | \"timestamp\" | \"list\";\n\n// add - add element in front of corresponding element\n// remove - remove the corresponding lement\n// change - change a string to the list\ntype Edit = \"add\" | \"remove\" | \"change\" | \"null\";\n\ninterface ItemProps {\n  value: Buffer | any[];\n  // parent handler for lifting state up\n  handler: (index: number, value: any, disabled: boolean, edit: Edit, rebuild: boolean) => any;\n  idx: number;\n  fromList: boolean;\n}\n\ninterface ItemState {\n  type: Type;\n  decoded: {\n    hex: string | null;\n    string: string | null;\n    number: string | null;\n    timestamp: string | null;\n    [key: string]: string | null;\n  };\n  // temporary value which sync with the parent's state\n  value: Buffer | any[] | null;\n  // A set of indices which the corresponding is not valid\n  disabled: Set<number>;\n}\n\nclass Item extends React.Component<ItemProps, ItemState> {\n  public constructor(props: ItemProps) {\n    super(props);\n    let type: Type;\n    let decoded;\n\n    if (Array.isArray(props.value)) {\n      type = \"list\";\n      decoded = {\n        hex: null,\n        string: null,\n        number: null,\n        timestamp: null,\n      };\n    } else if (Buffer.isBuffer(props.value)) {\n      type = \"hex\";\n      const hexString = hexDecoder(props.value);\n      decoded = {\n        hex:\n          hexString === null\n            ? null\n            : hexString.replace(/(\\w{4})/g, \"$1 \").replace(/(^\\s+|\\s+$)/, \"\"),\n        string: stringDecoder(props.value),\n        number: numberDecoder(props.value),\n        timestamp: timestampDecoder(props.value),\n      };\n    } else if (isNull(props.value)) {\n      type = \"hex\";\n      decoded = {\n        hex: \"0x80\",\n        string: null,\n        number: null,\n        timestamp: null,\n      };\n    } else {\n      throw Error(\"Invalid type\");\n    }\n\n    this.state = {\n      type,\n      decoded,\n      value: props.value,\n      disabled: new Set(),\n    };\n  }\n\n  // Handler for lifting state up\n  private valueHandler = (\n    index: number,\n    value: any,\n    disabled: boolean,\n    edit: Edit,\n    rebuild: boolean,\n  ) => {\n    // Only a list gets editing events from child elements\n    if (this.state.type !== \"list\") {\n      throw Error(\"Invalid type\");\n    }\n\n    let itemValue = this.state.value as any[];\n    let disabledSet = this.state.disabled;\n\n    // Do nothing if editing event is invalid\n    if (disabled) {\n      this.props.handler(this.props.idx, itemValue, true, \"null\", rebuild);\n      // Include the corresponding element into the invlid element list\n      disabledSet.add(index);\n    } else {\n      if (edit === \"null\") {\n        itemValue[index] = value;\n      } else if (edit === \"add\") {\n        itemValue.splice(index + 1, 0, Buffer.from(\"0x00\", \"hex\"));\n      } else if (edit === \"remove\") {\n        itemValue.splice(index, 1);\n      } else if (edit === \"change\") {\n        if (Array.isArray(itemValue[index])) {\n          throw Error(\"Invalid type\");\n        }\n\n        itemValue[index] = [itemValue[index]];\n      }\n      // Extract valid element's index which is not invalid anymore\n      disabledSet.delete(index);\n      if (disabledSet.size === 0) {\n        this.props.handler(this.props.idx, itemValue, false, \"null\", rebuild);\n      } else {\n        this.props.handler(this.props.idx, itemValue, true, \"null\", rebuild);\n      }\n    }\n\n    this.setState({ value: itemValue, disabled: disabledSet });\n  };\n\n  private handleTextChange = (e: any) => {\n    const { value }: { value: string } = e.target;\n    let hex = this.state.decoded.hex;\n    let string = this.state.decoded.string;\n    let number = this.state.decoded.number;\n    let timestamp = this.state.decoded.timestamp;\n    let itemValue = this.state.value;\n\n    // sync between 4 options\n    // If the changed value is invalid, only update the correspoding option's value and set null for others\n    if (this.state.type === \"hex\") {\n      console.log(value);\n      hex = value;\n      itemValue = hexEncoder(value.startsWith(\"0x\") ? value : \"0x\" + value);\n\n      string = itemValue === null ? null : stringDecoder(itemValue);\n      number = itemValue === null ? null : numberDecoder(itemValue);\n      timestamp = itemValue === null ? null : timestampDecoder(itemValue);\n    } else if (this.state.type === \"string\") {\n      string = value;\n      itemValue = stringEncoder(value);\n\n      hex = itemValue === null ? null : hexDecoder(itemValue);\n      number = itemValue === null ? null : numberDecoder(itemValue);\n      timestamp = itemValue === null ? null : timestampDecoder(itemValue);\n    } else if (this.state.type === \"number\") {\n      number = value;\n      itemValue = numberEncoder(value);\n\n      hex = itemValue === null ? null : hexDecoder(itemValue);\n      string = itemValue === null ? null : stringDecoder(itemValue);\n      timestamp = itemValue === null ? null : timestampDecoder(itemValue);\n    } else if (this.state.type === \"timestamp\") {\n      timestamp = value;\n      itemValue = timestampEncoder(value);\n\n      hex = itemValue === null ? null : hexDecoder(itemValue);\n      string = itemValue === null ? null : stringDecoder(itemValue);\n      number = itemValue === null ? null : numberDecoder(itemValue);\n    } else {\n      throw Error(\"Invalid type\");\n    }\n\n    this.setState({\n      type: this.state.type,\n      decoded: {\n        hex,\n        string,\n        number,\n        timestamp,\n      },\n      value: itemValue,\n    });\n\n    // lift state up only when a valid change occurs\n    if (itemValue === null) {\n      this.props.handler(this.props.idx, itemValue, true, \"null\", false);\n    } else {\n      this.props.handler(this.props.idx, itemValue, false, \"null\", false);\n    }\n  };\n\n  private handleSelectTypeChange = (e: any) => {\n    let itemValue;\n    if (e.target.value === \"hex\") {\n      itemValue = this.state.decoded.hex === null ? null : hexEncoder(this.state.decoded.hex);\n    } else if (e.target.value === \"string\") {\n      itemValue =\n        this.state.decoded.string === null ? null : stringEncoder(this.state.decoded.string);\n    } else if (e.target.valid === \"number\") {\n      itemValue =\n        this.state.decoded.number === null ? null : numberEncoder(this.state.decoded.number);\n    } else {\n      itemValue =\n        this.state.decoded.timestamp === null\n          ? null\n          : timestampEncoder(this.state.decoded.timestamp);\n    }\n\n    this.setState({\n      type: e.target.value,\n      value: itemValue,\n    });\n\n    this.props.handler(this.props.idx, itemValue, false, \"null\", false);\n  };\n\n  private renderSelector() {\n    const types: Type[] = [\"hex\", \"string\", \"number\", \"timestamp\"];\n    const options = types.map((type, index) => (\n      <option key={index} value={type}>\n        {type}\n      </option>\n    ));\n    return (\n      <select\n        className=\"browser-default custom-select\"\n        value={this.state.type}\n        onChange={this.handleSelectTypeChange}\n      >\n        {options}\n      </select>\n    );\n  }\n\n  private handleAdd = () => {\n    this.props.handler(this.props.idx, null, false, \"add\", true);\n  };\n\n  private handleRemove = () => {\n    this.props.handler(this.props.idx, null, false, \"remove\", true);\n  };\n\n  private handleChange = () => {\n    this.props.handler(this.props.idx, null, false, \"change\", true);\n  };\n\n  private handleListAdd = () => {\n    this.props.handler(this.props.idx, null, false, \"add\", true);\n  };\n\n  private handleListAddInsert = () => {\n    let itemValue = this.state.value as any[];\n    itemValue.splice(0, 0, Buffer.from(\"0x00\", \"hex\"));\n    this.props.handler(this.props.idx, itemValue, false, \"null\", true);\n    this.setState({ value: itemValue });\n  };\n\n  private handleListRemove = () => {\n    this.props.handler(this.props.idx, null, false, \"remove\", true);\n  };\n\n  public render() {\n    if (this.state.type === \"list\") {\n      if (Array.isArray(this.state.value)) {\n        return (\n          <div>\n            <div style={{ height: \"45px\" }}>\n              <div className=\"list\">[+] List({this.state.value.length})</div>\n              <div className=\"buttons\">\n                {this.props.fromList ? (\n                  <Button variant=\"outline-primary\" onClick={this.handleListAdd}>\n                    +\n                  </Button>\n                ) : null}\n                <Button\n                  variant=\"outline-danger\"\n                  onClick={this.handleListRemove}\n                  style={{ marginLeft: \"0.5rem\" }}\n                >\n                  -\n                </Button>\n              </div>\n            </div>\n            <div style={{ marginLeft: \"1rem\" }}>\n              <Button variant=\"outline-info\" onClick={this.handleListAddInsert}>\n                +\n              </Button>\n              {this.state.value.map((child, idx) => (\n                <Item\n                  key={idx}\n                  idx={idx}\n                  value={child}\n                  handler={this.valueHandler}\n                  fromList={true}\n                />\n              ))}\n            </div>\n          </div>\n        );\n      } else {\n        throw Error(\"Invalid type\");\n      }\n    } else {\n      let decodedValue = this.state.decoded[this.state.type];\n      if (decodedValue === null) {\n        decodedValue = \"\";\n      }\n\n      return (\n        <div>\n          <div className=\"element\">\n            <div className=\"selector\">{this.renderSelector()} </div>\n            <div className=\"decoded-text\">\n              <input\n                className=\"form-control\"\n                value={decodedValue}\n                onChange={this.handleTextChange}\n              />\n            </div>\n            {this.props.fromList ? (\n              <div className=\"buttons\">\n                <Button variant=\"outline-primary\" onClick={this.handleAdd}>\n                  +\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  onClick={this.handleRemove}\n                  style={{ marginLeft: \"0.5rem\" }}\n                >\n                  -\n                </Button>\n              </div>\n            ) : null}\n\n            <div className=\"buttons\">\n              <Button\n                variant=\"outline-success\"\n                onClick={this.handleChange}\n                style={{ marginLeft: \"0.5rem\" }}\n              >\n                List\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/CodechainLogo_White.630f622f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.11edc2fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/gitter.038f66f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.e5a5b160.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.afaec1a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.a2682b66.svg\";","/* eslint-disable @typescript-eslint/no-use-before-define */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}